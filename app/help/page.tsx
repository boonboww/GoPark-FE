"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import { Phone, MessageSquare, ChevronDown, ChevronUp } from "lucide-react";
import { Button } from "@/components/ui/button";

const faqs = [
  {
    question: "L√†m th·∫ø n√†o ƒë·ªÉ ƒë·∫∑t ch·ªó ƒë·ªó xe?",
    answer:
      "B·∫°n c√≥ th·ªÉ ƒë·∫∑t ch·ªó b·∫±ng c√°ch ch·ªçn b√£i ƒë·ªó mong mu·ªën, ch·ªçn g√≥i d·ªãch v·ª•, nh·∫≠p th√¥ng tin ph∆∞∆°ng ti·ªán v√† th·ª±c hi·ªán thanh to√°n tr·ª±c tuy·∫øn.",
  },
  {
    question: "L√†m th·∫ø n√†o ƒë·ªÉ h·ªßy ƒë·∫∑t ch·ªó?",
    answer:
      "V√†o trang ƒê·∫∑t ch·ªó c·ªßa t√¥i, ch·ªçn ƒë·∫∑t ch·ªó ƒëang ho·∫°t ƒë·ªông v√† nh·∫•n n√∫t H·ªßy. H·ªá th·ªëng s·∫Ω x·ª≠ l√Ω vi·ªác h·ªßy v√† ho√†n ti·ªÅn n·∫øu √°p d·ª•ng.",
  },
  {
    question: "Ph∆∞∆°ng th·ª©c thanh to√°n n√†o ƒë∆∞·ª£c ch·∫•p nh·∫≠n?",
    answer:
      "Ch√∫ng t√¥i ch·∫•p nh·∫≠n thanh to√°n qua th·∫ª ATM n·ªôi ƒë·ªãa, Visa/MasterCard, v√≠ ƒëi·ªán t·ª≠ v√† m√£ VietQR.",
  },
  {
    question: "T√¥i ph·∫£i l√†m g√¨ n·∫øu ph∆∞∆°ng ti·ªán g·∫∑p s·ª± c·ªë trong b√£i ƒë·ªó?",
    answer:
      "Vui l√≤ng li√™n h·ªá ƒë∆∞·ªùng d√¢y n√≥ng b√™n d∆∞·ªõi ho·∫∑c tr√≤ chuy·ªán v·ªõi Tr·ª£ l√Ω AI c·ªßa ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ ngay l·∫≠p t·ª©c v√† k·∫øt n·ªëi v·ªõi nh√¢n vi√™n t·∫°i ch·ªó.",
  },
];

export default function HelpPage() {
  const [openIndex, setOpenIndex] = useState<number | null>(null);
  const router = useRouter();

  const toggleFAQ = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  const handleChatAI = () => {
    router.push("/help/chatAI");
  };

  return (
    <>
      <Header />

      <main className="min-h-screen mt-20 px-4 py-12 flex flex-col items-center">
        <h1 className="text-3xl md:text-4xl font-bold mb-8">Trung t√¢m h·ªó tr·ª£</h1>

        <div className="w-full max-w-3xl flex flex-col gap-4">
          {faqs.map((faq, index) => (
            <div
              key={index}
              className="border rounded-lg p-4 bg-white shadow-sm"
            >
              <button
                onClick={() => toggleFAQ(index)}
                className="w-full flex justify-between items-center text-left text-lg font-medium"
              >
                <span>{faq.question}</span>
                {openIndex === index ? (
                  <ChevronUp className="w-5 h-5" />
                ) : (
                  <ChevronDown className="w-5 h-5" />
                )}
              </button>
              {openIndex === index && (
                <p className="mt-2 text-gray-600">{faq.answer}</p>
              )}
            </div>
          ))}
        </div>

        <div className="flex flex-col md:flex-row gap-4 mt-12">
          <Button
            variant="default"
            className="flex gap-2 items-center bg-black text-white hover:bg-gray-900 cursor-pointer"
            onClick={() => alert("üìû G·ªçi ƒë∆∞·ªùng d√¢y n√≥ng: +84 800 123 456")}
          >
            <Phone className="w-4 h-4" /> Li√™n h·ªá h·ªó tr·ª£
          </Button>
          <Button
            variant="outline"
            className="flex gap-2 items-center cursor-pointer"
            onClick={handleChatAI}
          >
            <MessageSquare className="w-4 h-4" /> Tr√≤ chuy·ªán v·ªõi AI
          </Button>
        </div>
      </main>

      <Footer />
    </>
  );
}