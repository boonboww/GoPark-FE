"use client";

import { useState } from "react";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import {
  ShieldCheck,
  Handshake,
  MessageSquarePlus,
  ChevronDown,
  ChevronUp,
  Phone,
  Download,
  SendHorizonal,
} from "lucide-react";
import { Button } from "@/components/ui/button";

export default function PolicyUserPage() {
  const [openIndex, setOpenIndex] = useState<number | null>(null);
  const [feedback, setFeedback] = useState("");

  const togglePolicy = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  const handleSendFeedback = () => {
    if (!feedback.trim()) return;
    alert(`‚úÖ C·∫£m ∆°n b·∫°n ƒë√£ g·ª≠i ph·∫£n h·ªìi:\n"${feedback}"`);
    setFeedback("");
  };

  const policies = [
    {
      title: "B√£i ƒê·∫≠u Xe > Ng∆∞·ªùi D√πng",
      icon: ShieldCheck,
      details: [
        "ƒê·∫£m b·∫£o an to√†n v√† b·∫£o m·∫≠t cho t·∫•t c·∫£ c√°c xe ƒë∆∞·ª£c ƒë·∫≠u.",
        "Cung c·∫•p h·ªó tr·ª£ 24/7 cho b·∫•t k·ª≥ v·∫•n ƒë·ªÅ n√†o li√™n quan ƒë·∫øn xe trong b√£i.",
        "Ho√†n ti·ªÅn cho c√°c tr∆∞·ªùng h·ª£p h·ªßy v√© ƒë√°p ·ª©ng ƒëi·ªÅu ki·ªán ch√≠nh s√°ch.",
        "ƒê·∫£m b·∫£o quy·ªÅn ri√™ng t∆∞ v√† b·∫£o v·ªá d·ªØ li·ªáu ng∆∞·ªùi d√πng.",
        "Cung c·∫•p c√°c d·ªãch v·ª• b·ªï sung: b·∫£o d∆∞·ª°ng, r·ª≠a xe, s·∫°c xe ƒëi·ªán.",
      ],
    },
    {
      title: "Ng∆∞·ªùi D√πng > B√£i ƒê·∫≠u Xe",
      icon: Handshake,
      details: [
        "ƒê·∫∑t ch·ªó v√† thanh to√°n v·ªõi th√¥ng tin xe ch√≠nh x√°c.",
        "Tu√¢n th·ªß quy ƒë·ªãnh ƒë·∫≠u xe v√† h∆∞·ªõng d·∫´n c·ªßa nh√¢n vi√™n.",
        "Kh√¥ng l·∫°m d·ª•ng c√°c ch·ªó ƒë√£ ƒë·∫∑t tr∆∞·ªõc ho·∫∑c g√¢y thi·ªát h·∫°i.",
        "T√¥n tr·ªçng ng∆∞·ªùi d√πng kh√°c v√† kh√¥ng gian chung.",
        "Cung c·∫•p ph·∫£n h·ªìi trung th·ª±c ƒë·ªÉ c·∫£i thi·ªán li√™n t·ª•c.",
      ],
    },
  ];

  return (
    <>
      <Header />

      <main className="min-h-screen mt-20 px-4 py-12 flex flex-col items-center">
        <h1 className="text-3xl md:text-4xl font-bold mb-8 text-black">
          Ch√≠nh S√°ch Ng∆∞·ªùi D√πng B√£i ƒê·∫≠u Xe
        </h1>

        <div className="w-full max-w-3xl flex flex-col gap-4">
          {policies.map((policy, index) => (
            <div
              key={index}
              className="border border-black rounded-lg p-4 bg-white shadow-sm"
            >
              <button
                onClick={() => togglePolicy(index)}
                className="w-full flex justify-between items-center text-left text-lg font-medium"
              >
                <span className="flex items-center gap-2">
                  <policy.icon className="w-5 h-5 text-black" />
                  {policy.title}
                </span>
                {openIndex === index ? (
                  <ChevronUp className="w-5 h-5" />
                ) : (
                  <ChevronDown className="w-5 h-5" />
                )}
              </button>
              {openIndex === index && (
                <ul className="mt-3 list-disc ml-6 text-gray-700 space-y-1">
                  {policy.details.map((point, i) => (
                    <li key={i}>{point}</li>
                  ))}
                </ul>
              )}
            </div>
          ))}
        </div>

        {/* G√≥p √Ω */}
        <div className="w-full max-w-3xl mt-12 p-4 border border-black rounded-lg bg-white shadow-sm">
          <div className="flex items-center gap-2 mb-3">
            <MessageSquarePlus className="w-5 h-5 text-black" />
            <h2 className="text-lg font-semibold">Ph·∫£n H·ªìi C·ªßa B·∫°n</h2>
          </div>
          <textarea
            rows={4}
            className="w-full border border-gray-300 rounded-lg p-3 focus:outline-none"
            placeholder="Vi·∫øt ph·∫£n h·ªìi c·ªßa b·∫°n t·∫°i ƒë√¢y..."
            value={feedback}
            onChange={(e) => setFeedback(e.target.value)}
          />
          <Button
            onClick={handleSendFeedback}
            className="mt-3 bg-black text-white hover:bg-gray-900 flex gap-2 items-center"
          >
            <SendHorizonal className="w-4 h-4" />
            G·ª≠i Ph·∫£n H·ªìi
          </Button>
        </div>

        {/* Hotline + PDF */}
        <div className="w-full max-w-3xl mt-8 flex flex-col md:flex-row gap-4">
          <Button
            onClick={() => alert("üìû Hotline: +84 123 456 789")}
            className="flex gap-2 items-center bg-black text-white hover:bg-gray-900"
          >
            <Phone className="w-4 h-4" /> H·ªó Tr·ª£ Hotline
          </Button>

          <a
            href="/policy.pdf"
            download
            className="flex gap-2 items-center justify-center border border-black px-4 py-2 rounded hover:bg-black hover:text-white transition"
          >
            <Download className="w-4 h-4" /> T·∫£i Ch√≠nh S√°ch PDF
          </a>
        </div>

        <p className="text-xs text-gray-500 mt-6">
          Phi√™n b·∫£n 1.0 ‚Äî C·∫≠p nh·∫≠t l·∫ßn cu·ªëi Th√°ng 7 2025
        </p>
      </main>

      <Footer />
    </>
  );
}